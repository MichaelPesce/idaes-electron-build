name: App build
run-name: App Build For ${{ inputs.project }}
on:
  workflow_call:
    inputs:
      project:
        type: string
        required: true
      pip-install-target:
        type: string
        required: true
      idaes-flowsheet-processor-ui-repo:
        type: string
        default: watertap-org/idaes-flowsheet-processor-ui
      idaes-flowsheet-processor-ui-ref:
        type: string
        default: main
      package-build-number:
        type: string
    secrets:
      AZURE_KEY_VAULT_URI:
        required: true
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_CERT_NAME:
        required: true

defaults:
  run:
    # -l: use login shell (required when using Conda)
    shell: bash -l {0}

env:
  PYTEST_ADDOPTS: --color=yes

jobs:
  windows-build:
    name: Windows Build

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: flowsheet-processor-env
          miniforge-version: latest
      
      - name: Install Azure Signtool
        run: |
          dotnet tool install --global AzureSignTool

        ## use this for naming package
      - name: Generate Package Build Number
        id: generate-build-number
        run: |
          if [ -z "${{ inputs.package-build-number }}"]; then
            echo "inside if statement"
            echo "::set-output name=build-number::$(date +'%y.%m.%d')"
          else
            echo "inside else statement"
            echo "::set-output name=build-number::${{ inputs.package-build-number }}"
          fi

      - name: Install IDAES Flowsheet Processor UI locally
        working-directory: ./electron
        # run: git clone https://github.com/watertap-org/idaes-flowsheet-processor-ui.git && cd idaes-flowsheet-processor-ui && pip install --progress-bar off .
        run: git clone https://github.com/${{ inputs.idaes-flowsheet-processor-ui-repo }}.git && cd idaes-flowsheet-processor-ui && git fetch --all --tags && git checkout ${{ inputs.idaes-flowsheet-processor-ui-ref }} && pip install --progress-bar off .

        ## creates package.json and .env files
      - name: Set configuration files
        run: python scripts/set_configuration.py -p ${{ inputs.project }} -v ${{ steps.generate-build-number.outputs.build-number }}

      - name: Install Electron JS dependencies
        working-directory: ./electron
        run:  npm install

      - name: Install frontend JS dependencies
        working-directory: ./electron/idaes-flowsheet-processor-ui/frontend 
        run: npm clean-install

      - name: Pip install backend repository
        run: pip install --progress-bar off ${{ inputs.pip-install-target }}

      - name: Get idaes extensions
        run: idaes get-extensions

      - name: Transfer Entry points
        working-directory: ./scripts
        run: |
          python move_entrypoints.py -p ${{ inputs.project }}

      - name: Build Backend
        working-directory: ./pyinstaller
        run: pyinstaller -y --clean --distpath ../electron/py_dist main.spec

      - name: Build Frontend
        working-directory: ./electron/idaes-flowsheet-processor-ui/frontend
        env:
          CI: false
        run: npm run build

      - name: Build Windows Distribution
        working-directory: ./electron
        run: npm run electron-build-win

      - name: Sign Windows Distribution
        run: |
          AzureSignTool sign -kvu "${{ secrets.AZURE_KEY_VAULT_URI }}" -kvi "${{ secrets.AZURE_CLIENT_ID }}" -kvt "${{ secrets.AZURE_TENANT_ID }}" -kvs "${{ secrets.AZURE_CLIENT_SECRET }}" -kvc ${{ secrets.AZURE_CERT_NAME }} -tr http://timestamp.digicert.com -v electron/dist/${{ inputs.project }}-Flowsheet-Processor_${{ steps.generate-build-number.outputs.build-number }}_win64.exe


      - name: Upload artifact for windows build
        uses: actions/upload-artifact@v4
        if: always()
        with:
            name: windows-dist
            path: |
              electron/dist/${{ inputs.project }}-Flowsheet-Processor_${{ steps.generate-build-number.outputs.build-number }}_win64.exe
